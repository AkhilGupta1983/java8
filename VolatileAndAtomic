package object;

import java.util.concurrent.atomic.AtomicInteger;

public class RaceCondition {

	public static void main(String args[]) {

		Shared shared = new Shared();

		for (int i = 0; i < 100; i++) {
			Thread t = new Thread(shared);
			t.start();
		}

	}

}

class Shared implements Runnable {
	// volatile int marks=1; example of volatile
	int marks = 1;

	AtomicInteger atomicInteger = new AtomicInteger(1);

	@Override
	public void run() {

		// marks +=2;
		atomicInteger.getAndAdd(2);
		System.out.println("marks are " + atomicInteger.get());

	}

}
