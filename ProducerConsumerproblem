package collectionsPackage;

import java.util.concurrent.BlockingDeque;
import java.util.concurrent.LinkedBlockingDeque;
import java.util.concurrent.LinkedBlockingQueue;

//https://docs.oracle.com/javase/tutorial/essential/concurrency/
public class CollSample {

	public static void main(String arsg[]) {

		LinkedBlockingQueue<Integer> q = new LinkedBlockingQueue();

		Runnable r1 = new Runnable() {
			int val = 1;

			@Override
			public void run() {
				while (true) {

					System.out.println("Produced---->  " + val);
					try {
						q.put(val++);
						Thread.sleep(2000);
					} catch (InterruptedException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
			}
		};

		Thread producer = new Thread(r1);
		producer.setName("--Producer--");
		producer.start();

		Runnable r2 = new Runnable() {

			@Override
			public void run() {
				while (true) {
					int read = 0;
					try {
						read = q.take();
						
						Thread.sleep(2000);
						
					} catch (InterruptedException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
					System.out.println(" Consumed  " + read);
				}

			}
		};

		Thread consumer = new Thread(r2);
		consumer.setName("--consumer--");
		consumer.start();
	}
}
